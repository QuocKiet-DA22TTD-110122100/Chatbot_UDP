package chatudp;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Ti·ªán √≠ch cho UDP Chat Application
 * Cung c·∫•p c√°c h√†m format tin nh·∫Øn, log, v√† c√°c ti·ªán √≠ch kh√°c
 */
public class Utils {
    
    private static final DateTimeFormatter TIME_FORMATTER = 
        DateTimeFormatter.ofPattern("HH:mm:ss");
    
    /**
     * Format tin nh·∫Øn v·ªõi timestamp
     */
    public static String formatMessage(String username, String message) {
        String timestamp = getCurrentTime();
        return String.format("[%s] %s: %s", timestamp, username, message);
    }
    
    /**
     * Format log message cho server
     */
    public static String formatServerLog(String action, String details) {
        String timestamp = getCurrentTime();
        return String.format("[%s] [Server] %s: %s", timestamp, action, details);
    }
    
    /**
     * L·∫•y th·ªùi gian hi·ªán t·∫°i
     */
    public static String getCurrentTime() {
        return LocalDateTime.now().format(TIME_FORMATTER);
    }
    
    /**
     * T·∫°o header cho console output
     */
    public static void printHeader(String title) {
        System.out.println("=".repeat(50));
        System.out.println("üéØ " + title);
        System.out.println("=".repeat(50));
    }
    
    /**
     * T·∫°o separator line
     */
    public static void printSeparator() {
        System.out.println("-".repeat(50));
    }
    
    /**
     * Format th√¥ng b√°o k·∫øt n·ªëi
     */
    public static String formatConnectionMessage(String clientInfo) {
        return String.format("üë§ Client connected: %s", clientInfo);
    }
    
    /**
     * Format th√¥ng b√°o broadcast
     */
    public static String formatBroadcastMessage(int clientCount) {
        return String.format("üì§ Broadcasted to %d clients", clientCount);
    }
    
    /**
     * Ki·ªÉm tra xem tin nh·∫Øn c√≥ h·ª£p l·ªá kh√¥ng
     */
    public static boolean isValidMessage(String message) {
        return message != null && !message.trim().isEmpty() && message.length() <= 1000;
    }
    
    /**
     * L√†m s·∫°ch tin nh·∫Øn (lo·∫°i b·ªè k√Ω t·ª± ƒë·∫∑c bi·ªát c√≥ th·ªÉ g√¢y l·ªói)
     */
    public static String sanitizeMessage(String message) {
        if (message == null) return "";
        return message.trim().replaceAll("[\\r\\n]", " ");
    }
    
    /**
     * T·∫°o th√¥ng b√°o demo UDP
     */
    public static void printUDPDemoInfo() {
        System.out.println("üì° UDP Chat Demo - Minh h·ªça ƒë·∫∑c ƒëi·ªÉm UDP:");
        System.out.println("   ‚Ä¢ Connectionless - Kh√¥ng c·∫ßn k·∫øt n·ªëi tr∆∞·ªõc");
        System.out.println("   ‚Ä¢ Fast - Nhanh, overhead th·∫•p");
        System.out.println("   ‚Ä¢ Unreliable - C√≥ th·ªÉ m·∫•t g√≥i, sai th·ª© t·ª±");
        System.out.println("   ‚Ä¢ No ACK - Kh√¥ng c√≥ x√°c nh·∫≠n nh·∫≠n tin");
        printSeparator();
    }
}


